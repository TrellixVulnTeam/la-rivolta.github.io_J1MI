{"ast":null,"code":"var _jsxFileName = \"/home/nbilai/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/react 2022/catalog/src/components/Card/Card.js\";\nimport React, { useContext } from 'react';\nimport { createStore } from \"redux\";\nimport reducer from \"../../reducers\";\nimport setState from \"../../actions/index.js\";\nimport './Card.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Card = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: props.liked == true ? \"card liked\" : \"card\",\n    \"data-index\": props.idCard,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cardText\",\n      children: props.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cardDate\",\n      children: props.date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: e => likeHandler(e, props.store),\n      \"data-index\": props.idCard,\n      children: \"Like\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: e => deleteHandler(e),\n      \"data-index\": props.idCard,\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n_c = Card;\n\nconst likeHandler = (e, store) => {\n  changeStore(e, store, 'liked');\n  checkLikedClass(e, 'liked');\n};\n\nconst changeStore = (e, store, currentProp) => {\n  const currentId = e.target.dataset.index;\n  let newStore = [];\n  store.getState().map((item, index) => {\n    if (index == currentId) {\n      item[`${currentProp}`] = true;\n    }\n\n    newStore.push(item);\n  });\n  store.dispatch(setState(newStore));\n};\n\nconst checkLikedClass = (e, searchClassName) => {\n  if (e.target.classList.contains(searchClassName)) {\n    e.target.classList.remove(searchClassName);\n  } else {\n    e.target.classList.add(searchClassName);\n  }\n};\n\nconst deleteHandler = e => {\n  e.target.parentNode.remove();\n  const idDelete = e.target.dataset.index;\n  let newArray = []; // Object.values(state.cards).map((item, index) => {\n  //     if(idDelete == index){\n  //         state.cards[index].deleted = true;\n  //     }\n  // newArray.push(item);\n  // })\n  // const arrayState = newArray.filter((item) => {\n  //     return item.deleted != true;\n  // })\n  // state = arrayState;\n  // console.log(state);\n  // return state;\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/home/nbilai/Документы/react 2022/catalog/src/components/Card/Card.js"],"names":["React","useContext","createStore","reducer","setState","Card","props","liked","idCard","text","date","e","likeHandler","store","deleteHandler","changeStore","checkLikedClass","currentProp","currentId","target","dataset","index","newStore","getState","map","item","push","dispatch","searchClassName","classList","contains","remove","add","parentNode","idDelete","newArray"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,OAA5B;AAEA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAO,aAAP;;AAEA,OAAO,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAC3B,sBACI;AAAK,IAAA,SAAS,EAAEA,KAAK,CAACC,KAAN,IAAe,IAAf,GAAsB,YAAtB,GAAqC,MAArD;AAA6D,kBAAYD,KAAK,CAACE,MAA/E;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,gBAA2BF,KAAK,CAACG;AAAjC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,gBAA2BH,KAAK,CAACI;AAAjC;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAK,MAAA,OAAO,EAAEC,CAAC,IAAIC,WAAW,CAACD,CAAD,EAAIL,KAAK,CAACO,KAAV,CAA9B;AAAgD,oBAAYP,KAAK,CAACE,MAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAK,MAAA,OAAO,EAAEG,CAAC,IAAIG,aAAa,CAACH,CAAD,CAAhC;AAAqC,oBAAYL,KAAK,CAACE,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CATM;KAAMH,I;;AAWb,MAAMO,WAAW,GAAG,CAACD,CAAD,EAAIE,KAAJ,KAAc;AAC9BE,EAAAA,WAAW,CAACJ,CAAD,EAAIE,KAAJ,EAAW,OAAX,CAAX;AACAG,EAAAA,eAAe,CAACL,CAAD,EAAI,OAAJ,CAAf;AACD,CAHH;;AAKE,MAAMI,WAAW,GAAG,CAACJ,CAAD,EAAIE,KAAJ,EAAWI,WAAX,KAA0B;AAC5C,QAAMC,SAAS,GAAGP,CAAC,CAACQ,MAAF,CAASC,OAAT,CAAiBC,KAAnC;AACA,MAAIC,QAAQ,GAAG,EAAf;AACAT,EAAAA,KAAK,CAACU,QAAN,GAAiBC,GAAjB,CAAqB,CAACC,IAAD,EAAOJ,KAAP,KAAiB;AAClC,QAAGA,KAAK,IAAIH,SAAZ,EAAsB;AAClBO,MAAAA,IAAI,CAAE,GAAER,WAAY,EAAhB,CAAJ,GAAyB,IAAzB;AACH;;AACDK,IAAAA,QAAQ,CAACI,IAAT,CAAcD,IAAd;AACH,GALD;AAMAZ,EAAAA,KAAK,CAACc,QAAN,CAAevB,QAAQ,CAACkB,QAAD,CAAvB;AACD,CAVD;;AAYA,MAAMN,eAAe,GAAG,CAACL,CAAD,EAAIiB,eAAJ,KAAwB;AAC9C,MAAIjB,CAAC,CAACQ,MAAF,CAASU,SAAT,CAAmBC,QAAnB,CAA4BF,eAA5B,CAAJ,EAAiD;AAC7CjB,IAAAA,CAAC,CAACQ,MAAF,CAASU,SAAT,CAAmBE,MAAnB,CAA0BH,eAA1B;AACH,GAFD,MAEO;AACHjB,IAAAA,CAAC,CAACQ,MAAF,CAASU,SAAT,CAAmBG,GAAnB,CAAuBJ,eAAvB;AACH;AACF,CAND;;AAQA,MAAMd,aAAa,GAAIH,CAAD,IAAO;AAC3BA,EAAAA,CAAC,CAACQ,MAAF,CAASc,UAAT,CAAoBF,MAApB;AACA,QAAMG,QAAQ,GAAGvB,CAAC,CAACQ,MAAF,CAASC,OAAT,CAAiBC,KAAlC;AACA,MAAIc,QAAQ,GAAG,EAAf,CAH2B,CAO3B;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACD,CArBD","sourcesContent":["import React, {useContext} from 'react';\nimport { createStore } from \"redux\";  \n\nimport reducer from \"../../reducers\";\nimport setState from \"../../actions/index.js\";\nimport './Card.scss';\n\nexport const Card = (props) => {\n    return(\n        <div className={props.liked == true ? \"card liked\" : \"card\"} data-index={props.idCard}>\n            <div className=\"cardText\">{props.text}</div>\n            <div className=\"cardDate\">{props.date}</div>\n            <div onClick={e => likeHandler(e, props.store)} data-index={props.idCard}>Like</div>\n            <div onClick={e => deleteHandler(e)} data-index={props.idCard}>Delete</div>\n        </div>\n    )\n}\n\nconst likeHandler = (e, store) => {\n    changeStore(e, store, 'liked');\n    checkLikedClass(e, 'liked');\n  }\n\n  const changeStore = (e, store, currentProp) =>{\n    const currentId = e.target.dataset.index;\n    let newStore = [];\n    store.getState().map((item, index) => {\n        if(index == currentId){\n            item[`${currentProp}`] = true;\n        }\n        newStore.push(item);\n    })\n    store.dispatch(setState(newStore));\n  }\n\n  const checkLikedClass = (e, searchClassName) => {\n    if( e.target.classList.contains(searchClassName)){\n        e.target.classList.remove(searchClassName);\n    } else {\n        e.target.classList.add(searchClassName);\n    }\n  }\n\n  const deleteHandler = (e) => {\n    e.target.parentNode.remove();\n    const idDelete = e.target.dataset.index;\n    let newArray = [];\n\n\n\n    // Object.values(state.cards).map((item, index) => {\n    //     if(idDelete == index){\n    //         state.cards[index].deleted = true;\n    //     }\n    // newArray.push(item);\n\n    // })\n    // const arrayState = newArray.filter((item) => {\n    //     return item.deleted != true;\n    // })\n    // state = arrayState;\n    // console.log(state);\n\n    // return state;\n  }\n"]},"metadata":{},"sourceType":"module"}