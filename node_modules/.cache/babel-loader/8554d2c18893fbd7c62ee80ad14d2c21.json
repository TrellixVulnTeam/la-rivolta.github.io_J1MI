{"ast":null,"code":"var _jsxFileName = \"/home/nbilai/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/react 2022/catalog/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { createStore } from \"redux\";\nimport reducer from \"./reducers\";\nimport './App.scss';\nimport { Card } from './components/Card/Card';\nimport { RateContext } from './context/Context'; // let initialState = {};\n// let store = {}; \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet initialState1 = {};\nlet store = {};\n\nconst App = () => {\n  _s();\n\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //       cards: ''\n  //     }\n  // }\n  // componentDidMount(){\n  //   fetch(`https://cat-fact.herokuapp.com/facts/`)\n  //   .then((response) => response.json()).then((response => {\n  //     response.map((item) => {\n  //       item.like = false;\n  //     })\n  //     initialState1 = response;\n  //     store = createStore(reducer, initialState1)\n  //   }))\n  // }\n  useEffect(() => {\n    // Обновляем заголовок документа с помощью API браузера\n    document.title = `Вы нажали ${count} раз`;\n  });\n  console.log(store.getState());\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 7\n  }, this) // <RateContext.Provider value={{state: this.state}}>\n  // <div className=\"cardContainer\">\n  //   {\n  //     Object.values(store.getState().cards).map((item, index) => {\n  //       return(\n  //       <Card \n  //       key={index}\n  //       idCard={index}\n  //       text={item.text}\n  //       updatedAt={item.updatedAt}\n  //       like={item.like}\n  //       />\n  //       )\n  //     })\n  //   }\n  // </div>\n  // </RateContext.Provider>\n  ;\n};\n\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/nbilai/Документы/react 2022/catalog/src/App.js"],"names":["React","useEffect","createStore","reducer","Card","RateContext","initialState1","store","App","document","title","count","console","log","getState"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,WAAT,QAA4B,OAA5B;AAEA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAO,YAAP;AACA,SAAQC,IAAR,QAAmB,wBAAnB;AACA,SAAQC,WAAR,QAA0B,mBAA1B,C,CAEA;AACA;;;AAEA,IAAIC,aAAa,GAAG,EAApB;AACA,IAAIC,KAAK,GAAG,EAAZ;;AAEA,MAAMC,GAAG,GAAG,MAAK;AAAA;;AAEf;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAP,EAAAA,SAAS,CAAC,MAAM;AACd;AACAQ,IAAAA,QAAQ,CAACC,KAAT,GAAkB,aAAYC,KAAM,MAApC;AACD,GAHQ,CAAT;AAKEC,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACO,QAAN,EAAZ;AACA,sBACE;AAAA;AAAA;AAAA;AAAA,UADF,CAIE;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACF;AApBF;AAsBD,CAhDH;;GAAMN,G;;KAAAA,G;AAoDN,eAAeA,GAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport { createStore } from \"redux\";  \n\nimport reducer from \"./reducers\";\nimport './App.scss';\nimport {Card} from './components/Card/Card';\nimport {RateContext} from './context/Context';\n\n// let initialState = {};\n// let store = {}; \n\nlet initialState1 = {};\nlet store = {};  \n\nconst App = () =>{\n\n  // constructor(props) {\n  //   super(props);\n\n  //   this.state = {\n  //       cards: ''\n  //     }\n  // }\n\n  // componentDidMount(){\n  //   fetch(`https://cat-fact.herokuapp.com/facts/`)\n  //   .then((response) => response.json()).then((response => {\n  //     response.map((item) => {\n  //       item.like = false;\n  //     })\n  //     initialState1 = response;\n  //     store = createStore(reducer, initialState1)\n  //   }))\n  // }\n  useEffect(() => {\n    // Обновляем заголовок документа с помощью API браузера\n    document.title = `Вы нажали ${count} раз`;\n  });\n\n    console.log(store.getState());\n    return(\n      <div>\n        \n      </div>\n      // <RateContext.Provider value={{state: this.state}}>\n        // <div className=\"cardContainer\">\n        //   {\n        //     Object.values(store.getState().cards).map((item, index) => {\n        //       return(\n        //       <Card \n        //       key={index}\n        //       idCard={index}\n        //       text={item.text}\n        //       updatedAt={item.updatedAt}\n        //       like={item.like}\n        //       />\n        //       )\n        //     })\n        //   }\n        // </div>\n      // </RateContext.Provider>\n    )\n  }\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}