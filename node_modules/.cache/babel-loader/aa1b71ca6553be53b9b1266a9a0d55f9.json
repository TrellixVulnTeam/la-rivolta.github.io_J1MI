{"ast":null,"code":"var _jsxFileName = \"/home/nbilai/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/react 2022/catalog/src/components/Card/Card.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport setState from \"../../actions/index.js\";\nimport './Card.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Card = props => {\n  _s();\n\n  const [data, deleteData] = useState(null);\n  console.log(props);\n\n  if (props.deleted == false) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: props.liked == true ? \"card liked\" : \"card\",\n      \"data-index\": props.idCard,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cardText\",\n        children: props.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cardDate\",\n        children: props.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: e => likeHandler(e, props.store),\n        \"data-index\": props.idCard,\n        children: \"Like\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: e => deleteHandler(e, props.store),\n        \"data-index\": props.idCard,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(Card, \"LPKQPIdnSJ3Xt5zyoPn/LeVXc58=\");\n\n_c = Card;\n\nconst likeHandler = (e, store) => {\n  changeStore(e, store, 'liked');\n  checkLikedClass(e, 'liked');\n};\n\nconst deleteHandler = (e, store) => {\n  changeStore(e, store, 'deleted');\n  likedData == 0 ? deleteData(1) : deleteData(0); // if(e.target.parentNode){\n  //     e.target.parentNode.remove();\n  // }\n};\n\nconst changeStore = (e, store, currentProp) => {\n  const currentId = e.target.dataset.index;\n  let newStore = [];\n  store.getState().map((item, index) => {\n    if (index == currentId) {\n      if (item[`${currentProp}`] == true) {\n        item[`${currentProp}`] = false;\n      } else {\n        item[`${currentProp}`] = true;\n      }\n    }\n\n    newStore.push(item);\n  });\n  store.dispatch(setState(newStore));\n};\n\nconst checkLikedClass = (e, searchClassName) => {\n  if (e.target.classList.contains(searchClassName)) {\n    e.target.classList.remove(searchClassName);\n  } else {\n    e.target.classList.add(searchClassName);\n  }\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/home/nbilai/Документы/react 2022/catalog/src/components/Card/Card.js"],"names":["React","useState","setState","Card","props","data","deleteData","console","log","deleted","liked","idCard","text","date","e","likeHandler","store","deleteHandler","changeStore","checkLikedClass","likedData","currentProp","currentId","target","dataset","index","newStore","getState","map","item","push","dispatch","searchClassName","classList","contains","remove","add"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\n\nimport setState from \"../../actions/index.js\";\nimport './Card.scss';\n\nexport const Card = (props) => {\n    const [data, deleteData] = useState(null);  \n    console.log(props);\n    if (props.deleted == false){\n        return(\n            <div className={props.liked == true ? \"card liked\" : \"card\"} data-index={props.idCard}>\n                <div className=\"cardText\">{props.text}</div>\n                <div className=\"cardDate\">{props.date}</div>\n                <div onClick={e => likeHandler(e, props.store)} data-index={props.idCard}>Like</div>\n                <div onClick={e => deleteHandler(e, props.store)} data-index={props.idCard}>Delete</div>\n            </div>\n        )\n    }\n}\n\nconst likeHandler = (e, store) => {\n    changeStore(e, store, 'liked');\n    checkLikedClass(e, 'liked');\n  }\n\n  const deleteHandler = (e, store) => {\n    changeStore(e, store, 'deleted');\n    likedData == 0 ? deleteData(1) : deleteData(0)\n    // if(e.target.parentNode){\n    //     e.target.parentNode.remove();\n    // }\n  }\n\n  const changeStore = (e, store, currentProp) =>{\n    const currentId = e.target.dataset.index;\n    let newStore = [];\n    store.getState().map((item, index) => {\n        if(index == currentId){\n            if(item[`${currentProp}`] == true){\n                item[`${currentProp}`] = false;\n            }else{\n                item[`${currentProp}`] = true;\n            }\n        }\n        newStore.push(item);\n    })\n    store.dispatch(setState(newStore));\n  }\n\n  const checkLikedClass = (e, searchClassName) => {\n    if( e.target.classList.contains(searchClassName)){\n        e.target.classList.remove(searchClassName);\n    } else {\n        e.target.classList.add(searchClassName);\n    }\n  }\n"]},"metadata":{},"sourceType":"module"}