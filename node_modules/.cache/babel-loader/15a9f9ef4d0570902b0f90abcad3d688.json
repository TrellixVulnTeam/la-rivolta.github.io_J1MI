{"ast":null,"code":"var _jsxFileName = \"/home/nbilai/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/react 2022/catalog/src/components/Card/Card.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport './Card.scss';\nimport { RateContext } from '../../context/Context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Card = props => {\n  _s();\n\n  const {\n    state\n  } = useContext(RateContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: props.like == true ? \"card like\" : \"card\",\n    \"data-index\": props.idCard,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cardText\",\n      children: props.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cardDate\",\n      children: props.date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: e => likeHandler(e, state),\n      \"data-index\": props.idCard,\n      children: \"Like\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: e => deleteHandler(e, state),\n      \"data-index\": props.idCard,\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Card, \"InUhF7dRXCUahyxBMI4beA9RUck=\");\n\n_c = Card;\n\nconst likeHandler = (e, state) => {\n  //const idLike = e.target.dataset.index;\n  if (e.target.classList.contains('liked')) {\n    e.target.classList.remove('liked');\n  } else {\n    e.target.classList.add('liked');\n  } // Object.values(state.cards).map((item, index) => {\n  //     if(idLike == index){\n  //         state.cards[index].like = true;\n  //     }\n  // })\n\n};\n\nconst deleteHandler = (e, state) => {\n  e.target.parentNode.remove();\n  const idDelete = e.target.dataset.index;\n  let newArray = [];\n  Object.values(state.cards).map((item, index) => {\n    if (idDelete == index) {\n      state.cards[index].deleted = true;\n    }\n\n    newArray.push(item);\n  });\n  const arrayState = newArray.filter(item => {\n    return item.deleted != true;\n  });\n  state = arrayState;\n  console.log(state);\n  return state;\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/home/nbilai/Документы/react 2022/catalog/src/components/Card/Card.js"],"names":["React","useContext","useState","RateContext","Card","props","state","like","idCard","text","date","e","likeHandler","deleteHandler","target","classList","contains","remove","add","parentNode","idDelete","dataset","index","newArray","Object","values","cards","map","item","deleted","push","arrayState","filter","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,QAA3B,QAA0C,OAA1C;AAEA,OAAO,aAAP;AACA,SAAQC,WAAR,QAA0B,uBAA1B;;AAEA,OAAO,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAM;AAACC,IAAAA;AAAD,MAAUL,UAAU,CAACE,WAAD,CAA1B;AACA,sBACI;AAAK,IAAA,SAAS,EAAEE,KAAK,CAACE,IAAN,IAAc,IAAd,GAAqB,WAArB,GAAmC,MAAnD;AAA2D,kBAAYF,KAAK,CAACG,MAA7E;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,gBAA2BH,KAAK,CAACI;AAAjC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,gBAA2BJ,KAAK,CAACK;AAAjC;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAK,MAAA,OAAO,EAAEC,CAAC,IAAIC,WAAW,CAACD,CAAD,EAAIL,KAAJ,CAA9B;AAA0C,oBAAYD,KAAK,CAACG,MAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAK,MAAA,OAAO,EAAEG,CAAC,IAAIE,aAAa,CAACF,CAAD,EAAIL,KAAJ,CAAhC;AAA4C,oBAAYD,KAAK,CAACG,MAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAVM;;GAAMJ,I;;KAAAA,I;;AAYb,MAAMQ,WAAW,GAAG,CAACD,CAAD,EAAIL,KAAJ,KAAc;AAC9B;AACA,MAAIK,CAAC,CAACG,MAAF,CAASC,SAAT,CAAmBC,QAAnB,CAA4B,OAA5B,CAAJ,EAAyC;AACrCL,IAAAA,CAAC,CAACG,MAAF,CAASC,SAAT,CAAmBE,MAAnB,CAA0B,OAA1B;AACH,GAFD,MAEO;AACHN,IAAAA,CAAC,CAACG,MAAF,CAASC,SAAT,CAAmBG,GAAnB,CAAuB,OAAvB;AACH,GAN6B,CAO9B;AACA;AACA;AACA;AACA;;AACD,CAZH;;AAcE,MAAML,aAAa,GAAG,CAACF,CAAD,EAAIL,KAAJ,KAAc;AAClCK,EAAAA,CAAC,CAACG,MAAF,CAASK,UAAT,CAAoBF,MAApB;AACA,QAAMG,QAAQ,GAAGT,CAAC,CAACG,MAAF,CAASO,OAAT,CAAiBC,KAAlC;AACA,MAAIC,QAAQ,GAAG,EAAf;AAEAC,EAAAA,MAAM,CAACC,MAAP,CAAcnB,KAAK,CAACoB,KAApB,EAA2BC,GAA3B,CAA+B,CAACC,IAAD,EAAON,KAAP,KAAiB;AAC5C,QAAGF,QAAQ,IAAIE,KAAf,EAAqB;AACjBhB,MAAAA,KAAK,CAACoB,KAAN,CAAYJ,KAAZ,EAAmBO,OAAnB,GAA6B,IAA7B;AACH;;AACLN,IAAAA,QAAQ,CAACO,IAAT,CAAcF,IAAd;AAEC,GAND;AAOA,QAAMG,UAAU,GAAGR,QAAQ,CAACS,MAAT,CAAiBJ,IAAD,IAAU;AACzC,WAAOA,IAAI,CAACC,OAAL,IAAgB,IAAvB;AACH,GAFkB,CAAnB;AAGAvB,EAAAA,KAAK,GAAGyB,UAAR;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY5B,KAAZ;AAEA,SAAOA,KAAP;AACD,CAnBD","sourcesContent":["import React, {useContext, useState} from 'react';\n\nimport './Card.scss';\nimport {RateContext} from '../../context/Context';\n\nexport const Card = (props) => {\n    const {state} = useContext(RateContext);\n    return(\n        <div className={props.like == true ? \"card like\" : \"card\"} data-index={props.idCard}>\n            <div className=\"cardText\">{props.text}</div>\n            <div className=\"cardDate\">{props.date}</div>\n            <div onClick={e => likeHandler(e, state)} data-index={props.idCard}>Like</div>\n            <div onClick={e => deleteHandler(e, state)} data-index={props.idCard}>Delete</div>\n        </div>\n    )\n}\n\nconst likeHandler = (e, state) => {\n    //const idLike = e.target.dataset.index;\n    if( e.target.classList.contains('liked')){\n        e.target.classList.remove('liked');\n    } else {\n        e.target.classList.add('liked');\n    }\n    // Object.values(state.cards).map((item, index) => {\n    //     if(idLike == index){\n    //         state.cards[index].like = true;\n    //     }\n    // })\n  }\n\n  const deleteHandler = (e, state) => {\n    e.target.parentNode.remove();\n    const idDelete = e.target.dataset.index;\n    let newArray = [];\n\n    Object.values(state.cards).map((item, index) => {\n        if(idDelete == index){\n            state.cards[index].deleted = true;\n        }\n    newArray.push(item);\n\n    })\n    const arrayState = newArray.filter((item) => {\n        return item.deleted != true;\n    })\n    state = arrayState;\n    console.log(state);\n\n    return state;\n  }\n"]},"metadata":{},"sourceType":"module"}