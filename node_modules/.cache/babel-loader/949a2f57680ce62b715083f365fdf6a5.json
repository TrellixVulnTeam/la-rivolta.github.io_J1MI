{"ast":null,"code":"var _jsxFileName = \"/home/nbilai/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/react 2022/catalog/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { createStore } from \"redux\";\nimport reducer from \"./reducers\";\nimport Store from \"./store\";\nimport './App.scss';\nimport { Card } from './components/Card/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst useFetch = () => {\n  _s();\n\n  const [data, updateData] = useState(null);\n  const requestUrl = 'https://cat-fact.herokuapp.com/facts/';\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(requestUrl);\n      updateData(response.data);\n    };\n\n    fetchData();\n  }, []);\n  return data;\n};\n\n_s(useFetch, \"DYyFTDrMhY9uvZcUm0PRkzFtbDs=\");\n\nlet likeData = 0;\n\nconst App = () => {\n  _s2();\n\n  const cards = useFetch();\n  const store = Store(reducer, cards); //const [likedData, updateLikedData] = useState(null); \n\n  if (store.getState() != null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cardContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          updateLikedData();\n        },\n        children: \"Only liked\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), Object.values(store.getState()).map((item, index) => {\n        if (likeData == 0) {\n          return /*#__PURE__*/_jsxDEV(Card, {\n            idCard: index,\n            text: item.text,\n            updatedAt: item.updatedAt,\n            like: item.liked,\n            store: store\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this);\n        } else if (likeData == 1 && item.liked == true) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this) // <Card \n          // key={index}\n          // idCard={index}\n          // text={item.text}\n          // updatedAt={item.updatedAt}\n          // like={item.liked}\n          // store={store}\n          // />\n          ;\n        }\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s2(App, \"wQkGEVCrP0UFQyVOoAevKvjPIdg=\", false, function () {\n  return [useFetch];\n});\n\n_c = App;\n\nconst updateLikedData = () => {\n  console.log(likeData);\n  likeData == 0 ? likeData = 1 : likeData = 0;\n  console.log(likeData);\n  return likeData;\n};\n\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/nbilai/Документы/react 2022/catalog/src/App.js"],"names":["React","useState","useEffect","axios","createStore","reducer","Store","Card","useFetch","data","updateData","requestUrl","fetchData","response","get","likeData","App","cards","store","getState","updateLikedData","Object","values","map","item","index","text","updatedAt","liked","console","log"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,OAA5B;AAEA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,YAAP;AACA,SAAQC,IAAR,QAAmB,wBAAnB;;;AAGA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,IAAD,EAAOC,UAAP,IAAqBT,QAAQ,CAAC,IAAD,CAAnC;AACA,QAAMU,UAAU,GAAG,uCAAnB;AACAT,EAAAA,SAAS,CAAE,MAAM;AACf,UAAMU,SAAS,GAAG,YAAY;AAC5B,YAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAUH,UAAV,CAAvB;AACAD,MAAAA,UAAU,CAACG,QAAQ,CAACJ,IAAV,CAAV;AACD,KAHD;;AAIAG,IAAAA,SAAS;AACV,GANQ,EAMP,EANO,CAAT;AAOA,SAAOH,IAAP;AACA,CAXF;;GAAMD,Q;;AAaN,IAAIO,QAAQ,GAAG,CAAf;;AAEA,MAAMC,GAAG,GAAG,MAAK;AAAA;;AACf,QAAMC,KAAK,GAAGT,QAAQ,EAAtB;AACA,QAAMU,KAAK,GAAGZ,KAAK,CAACD,OAAD,EAAUY,KAAV,CAAnB,CAFe,CAGf;;AAEA,MAAGC,KAAK,CAACC,QAAN,MAAoB,IAAvB,EAA4B;AAC1B,wBACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAE,MAAI;AAACC,UAAAA,eAAe;AAAG,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAGIC,MAAM,CAACC,MAAP,CAAcJ,KAAK,CAACC,QAAN,EAAd,EAAgCI,GAAhC,CAAoC,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACnD,YAAIV,QAAQ,IAAI,CAAhB,EAAkB;AAChB,8BACE,QAAC,IAAD;AAEA,YAAA,MAAM,EAAEU,KAFR;AAGA,YAAA,IAAI,EAAED,IAAI,CAACE,IAHX;AAIA,YAAA,SAAS,EAAEF,IAAI,CAACG,SAJhB;AAKA,YAAA,IAAI,EAAEH,IAAI,CAACI,KALX;AAMA,YAAA,KAAK,EAAEV;AANP,aACKO,KADL;AAAA;AAAA;AAAA;AAAA,kBADF;AAUD,SAXD,MAYK,IAAIV,QAAQ,IAAI,CAAZ,IAAiBS,IAAI,CAACI,KAAL,IAAc,IAAnC,EAAwC;AAC3C,8BACE;AAAA;AAAA;AAAA;AAAA,kBADF,CAEE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATF;AAWD;AACF,OA1BD,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAkCD,GAnCD,MAmCO;AACL,wBACE;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;AACF,CA7CD;;IAAMZ,G;UACUR,Q;;;KADVQ,G;;AA+CN,MAAMI,eAAe,GAAG,MAAK;AAC3BS,EAAAA,OAAO,CAACC,GAAR,CAAYf,QAAZ;AACAA,EAAAA,QAAQ,IAAI,CAAZ,GAAgBA,QAAQ,GAAG,CAA3B,GAA+BA,QAAQ,GAAG,CAA1C;AACAc,EAAAA,OAAO,CAACC,GAAR,CAAYf,QAAZ;AACA,SAAOA,QAAP;AACD,CALD;;AASA,eAAeC,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport { createStore } from \"redux\";  \n\nimport reducer from \"./reducers\";\nimport Store from \"./store\";\nimport './App.scss';\nimport {Card} from './components/Card/Card';\n\n\nconst useFetch = () => {\n  const [data, updateData] = useState(null);  \n  const requestUrl = 'https://cat-fact.herokuapp.com/facts/';\n  useEffect( () => {\n    const fetchData = async () => {\n      const response = await axios.get(requestUrl);\n      updateData(response.data);\n    }\n    fetchData();\n  },[])\n  return data;\n }\n\nlet likeData = 0;\n\nconst App = () =>{\n  const cards = useFetch();\n  const store = Store(reducer, cards);\n  //const [likedData, updateLikedData] = useState(null); \n\n  if(store.getState() != null){\n    return(\n      <div className=\"cardContainer\">\n        <button onClick={()=>{updateLikedData()}}>Only liked</button>\n        {\n          Object.values(store.getState()).map((item, index) => {\n            if (likeData == 0){\n              return(\n                <Card \n                key={index}\n                idCard={index}\n                text={item.text}\n                updatedAt={item.updatedAt}\n                like={item.liked}\n                store={store}\n                />\n                )\n            } \n            else if (likeData == 1 && item.liked == true){\n              return(\n                <div></div>\n                // <Card \n                // key={index}\n                // idCard={index}\n                // text={item.text}\n                // updatedAt={item.updatedAt}\n                // like={item.liked}\n                // store={store}\n                // />\n                )\n            }\n          })\n        }\n      </div>\n  )\n  } else {\n    return(\n      <div></div>\n    )\n  }\n}\n\nconst updateLikedData = () =>{\n  console.log(likeData);\n  likeData == 0 ? likeData = 1 : likeData = 0;\n  console.log(likeData);\n  return likeData;\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}